@model WAMVC.Models.DetallePedidoModel

@{
    ViewData["Title"] = "Detalles del Artículo";
}

<h1>Detalles del Artículo en Pedido</h1>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4>📋 Información del Detalle</h4>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">
                        Pedido #
                    </dt>
                    <dd class="col-sm-8">
                        <a asp-controller="Pedido" asp-action="Details" asp-route-id="@Model.IdPedido" class="btn btn-sm btn-outline-primary">
                            @Html.DisplayFor(model => model.IdPedido)
                        </a>
                    </dd>
                    <dt class="col-sm-4">
                        Cliente
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Pedido!.Cliente!.Nombre)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Producto!.Nombre)
                    </dt>
                    <dd class="col-sm-8">
                        <strong>@Html.DisplayFor(model => model.Producto!.Nombre)</strong>
                        @if (!string.IsNullOrEmpty(Model.Producto?.Descripcion))
                        {
                            <br>
                            <small class="text-muted">@Html.DisplayFor(model => model.Producto.Descripcion)</small>
                        }
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Cantidad)
                    </dt>
                    <dd class="col-sm-8">
                        <span class="badge bg-info fs-6">@Html.DisplayFor(model => model.Cantidad) unidades</span>
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.PrecioUnitario)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.PrecioUnitario)
                    </dd>
                </dl>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-header">
                <h5>🧮 Cálculos</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="text-center">
                            <h6>Cantidad</h6>
                            <p class="display-6 text-primary">@Model.Cantidad</p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="text-center">
                            <h6>Precio Unitario</h6>
                            <p class="display-6 text-info">@Model.PrecioUnitario.ToString("C")</p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="text-center">
                            <h6>Subtotal</h6>
                            <p class="display-6 text-success">@((Model.Cantidad * Model.PrecioUnitario).ToString("C"))</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-header">
                <h5>📦 Información del Producto</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">
                        Precio Actual del Producto
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Producto!.Precio)
                        @if (Model.Producto!.Precio != Model.PrecioUnitario)
                        {
                            <span class="badge bg-warning">
                                Precio ha cambiado desde la compra
                            </span>
                        }
                    </dd>
                    <dt class="col-sm-4">
                        Stock Actual
                    </dt>
                    <dd class="col-sm-8">
                        <span class="badge @(Model.Producto.Stock > 10 ? "bg-success" : Model.Producto.Stock > 0 ? "bg-warning" : "bg-danger")">
                            @Html.DisplayFor(model => model.Producto.Stock) unidades
                        </span>
                    </dd>
                </dl>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5>⚙️ Acciones</h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                        ✏️ Editar Detalle
                    </a>
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                        🗑️ Eliminar del Pedido
                    </a>
                    <hr>
                    <a asp-controller="Pedido" asp-action="Details" asp-route-id="@Model.IdPedido" class="btn btn-primary">
                        📄 Ver Pedido Completo
                    </a>
                    <a asp-action="Index" class="btn btn-secondary">
                        📋 Volver a la Lista
                    </a>
                    <a asp-action="Create" asp-route-pedidoId="@Model.IdPedido" class="btn btn-success">
                        ➕ Agregar Otro Artículo
                    </a>
                </div>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h6>💡 Información</h6>
            </div>
            <div class="card-body">
                <small class="text-muted">
                    <p><strong>ID del detalle:</strong> @Model.Id</p>
                    <p><strong>Diferencia de precio:</strong> 
                        @{
                            var diferencia = Model.Producto!.Precio - Model.PrecioUnitario;
                        }
                        @if (diferencia == 0)
                        {
                            <span class="text-success">Sin cambios</span>
                        }
                        else if (diferencia > 0)
                        {
                            <span class="text-info">+@diferencia.ToString("C")</span>
                        }
                        else
                        {
                            <span class="text-warning">@diferencia.ToString("C")</span>
                        }
                    </p>
                </small>
            </div>
        </div>
    </div>
</div>